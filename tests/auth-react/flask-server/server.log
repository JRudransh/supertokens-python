 * Serving Flask app 'app' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
No SuperTokens core available to query
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/anyio/_core/_sockets.py", line 127, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/anyio/_backends/_asyncio.py", line 1518, in connect_tcp
    await get_running_loop().create_connection(StreamProtocol, host, port,
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 1025, in create_connection
    raise exceptions[0]
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 1010, in create_connection
    sock = await self._connect_sock(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 924, in _connect_sock
    await self.sock_connect(sock, address)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/selector_events.py", line 496, in sock_connect
    return await fut
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/selector_events.py", line 528, in _sock_connect_cb
    raise OSError(err, f'Connect call failed {address}')
ConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 9000)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/_exceptions.py", line 8, in map_exceptions
    yield
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/backends/asyncio.py", line 109, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/anyio/_core/_sockets.py", line 184, in connect_tcp
    raise OSError('All connection attempts failed') from cause
OSError: All connection attempts failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/backends/asyncio.py", line 109, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpcore/_exceptions.py", line 12, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 502, in __send_request_helper
    response = await http_function(url, method)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 168, in f
    return await self.api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 110, in api_request
    return await client.get(url, *args, **kwargs)  # type: ignore
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_client.py", line 1751, in get
    return await self.request(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_client.py", line 1527, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_client.py", line 1614, in send
    response = await self._send_handling_auth(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_client.py", line 1642, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_client.py", line 1679, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_client.py", line 1716, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/recipe.py", line 182, in handle_api_request
    return await handle_email_verify_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/api/email_verify.py", line 55, in handle_email_verify_api
    result = await api_implementation.email_verify_post(
  File "app.py", line 399, in email_verify_post
    return await original_email_verify_post(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/recipe.py", line 515, in email_verify_post
    response = await api_options.recipe_implementation.verify_email_using_token(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/recipe_implementation.py", line 87, in verify_email_using_token
    response = await self.querier.send_post_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 343, in send_post_request
    headers = await self.__get_headers_with_api_version(path, user_context)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 234, in __get_headers_with_api_version
    headers = {API_VERSION_HEADER: await self.get_api_version(user_context)}
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 172, in get_api_version
    response = await self.__send_request_helper(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 544, in __send_request_helper
    return await self.__send_request_helper(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 477, in __send_request_helper
    raise Exception("No SuperTokens core available to query")
Exception: No SuperTokens core available to query

Object of type ThirdPartyInfo is not JSON serializable
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/recipe.py", line 137, in handle_api_request
    return await handle_sign_in_up_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/api/signinup.py", line 116, in handle_sign_in_up_api
    return send_200_response(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/utils.py", line 160, in send_200_response
    response.set_json_content(data_json)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_response.py", line 80, in set_json_content
    self.response.data = json.dumps(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ThirdPartyInfo is not JSON serializable

Object of type ThirdPartyInfo is not JSON serializable
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/recipe.py", line 137, in handle_api_request
    return await handle_sign_in_up_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/api/signinup.py", line 116, in handle_sign_in_up_api
    return send_200_response(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/utils.py", line 160, in send_200_response
    response.set_json_content(data_json)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_response.py", line 80, in set_json_content
    self.response.data = json.dumps(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ThirdPartyInfo is not JSON serializable

Object of type ThirdPartyInfo is not JSON serializable
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/recipe.py", line 137, in handle_api_request
    return await handle_sign_in_up_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/api/signinup.py", line 116, in handle_sign_in_up_api
    return send_200_response(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/utils.py", line 160, in send_200_response
    response.set_json_content(data_json)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_response.py", line 80, in set_json_content
    self.response.data = json.dumps(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ThirdPartyInfo is not JSON serializable

Object of type ThirdPartyInfo is not JSON serializable
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/recipe.py", line 137, in handle_api_request
    return await handle_sign_in_up_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/api/signinup.py", line 116, in handle_sign_in_up_api
    return send_200_response(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/utils.py", line 160, in send_200_response
    response.set_json_content(data_json)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_response.py", line 80, in set_json_content
    self.response.data = json.dumps(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ThirdPartyInfo is not JSON serializable

SuperTokens core threw an error for a GET request to path: '/customer1/users/by-accountinfo' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/recipe.py", line 335, in handle_api_request
    return await handle_sign_in_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/signin.py", line 64, in handle_sign_in_api
    response = await api_implementation.sign_in_post(
  File "app.py", line 505, in sign_in_post
    return await original_sign_in_post(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/implementation.py", line 563, in sign_in_post
    await get_authenticating_user_and_add_to_current_tenant_if_required(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/auth_utils.py", line 303, in get_authenticating_user_and_add_to_current_tenant_if_required
    existing_users = await AccountLinkingRecipe.get_instance().recipe_implementation.list_users_by_account_info(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/accountlinking/recipe_implementation.py", line 344, in list_users_by_account_info
    response = await self.querier.send_get_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 323, in send_get_request
    return await self.__send_request_helper(path, "GET", f, len(self.__hosts))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 523, in __send_request_helper
    raise Exception(
Exception: SuperTokens core threw an error for a GET request to path: '/customer1/users/by-accountinfo' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)


SuperTokens core threw an error for a GET request to path: '/customer1/users/by-accountinfo' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/recipe.py", line 339, in handle_api_request
    return await handle_email_exists_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/email_exists.py", line 40, in handle_email_exists_api
    response = await api_implementation.email_exists_get(
  File "app.py", line 451, in email_exists_get
    return await original_email_exists_get(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/implementation.py", line 83, in email_exists_get
    users = await AccountLinkingRecipe.get_instance().recipe_implementation.list_users_by_account_info(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/accountlinking/recipe_implementation.py", line 344, in list_users_by_account_info
    response = await self.querier.send_get_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 323, in send_get_request
    return await self.__send_request_helper(path, "GET", f, len(self.__hosts))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 523, in __send_request_helper
    raise Exception(
Exception: SuperTokens core threw an error for a GET request to path: '/customer1/users/by-accountinfo' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)


Tenant not found error.
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/recipe.py", line 331, in handle_api_request
    return await handle_sign_up_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/signup.py", line 73, in handle_sign_up_api
    response = await api_implementation.sign_up_post(
  File "app.py", line 527, in sign_up_post
    return await original_sign_up_post(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/implementation.py", line 682, in sign_up_post
    pre_auth_check_res = await pre_auth_checks(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/auth_utils.py", line 128, in pre_auth_checks
    await filter_out_invalid_first_factors_or_throw_if_all_are_invalid(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/auth_utils.py", line 876, in filter_out_invalid_first_factors_or_throw_if_all_are_invalid
    raise Exception("Tenant not found error.")
Exception: Tenant not found error.

Tenant not found
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/recipe.py", line 132, in handle_api_request
    return await handle_login_methods_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/api/login_methods.py", line 35, in handle_login_methods_api
    result = await api_implementation.login_methods_get(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/api/implementation.py", line 56, in login_methods_get
    raise Exception("Tenant not found")
Exception: Tenant not found

Tenant not found
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/recipe.py", line 132, in handle_api_request
    return await handle_login_methods_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/api/login_methods.py", line 35, in handle_login_methods_api
    result = await api_implementation.login_methods_get(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/api/implementation.py", line 56, in login_methods_get
    raise Exception("Tenant not found")
Exception: Tenant not found

SuperTokens core threw an error for a GET request to path: '/recipe/session' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/framework/flask/__init__.py", line 75, in wrapped_function
    response = f(*args, **kwargs)
  File "app.py", line 1279, in get_session_info
    "sessionDataFromDatabase": session_.sync_get_session_data_from_database(),
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/interfaces.py", line 604, in sync_get_session_data_from_database
    return sync(self.get_session_data_from_database(user_context))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/session_class.py", line 113, in get_session_data_from_database
    session_info = await self.recipe_implementation.get_session_information(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/recipe_implementation.py", line 373, in get_session_information
    return await session_functions.get_session_information(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/session_functions.py", line 550, in get_session_information
    response = await recipe_implementation.querier.send_get_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 323, in send_get_request
    return await self.__send_request_helper(path, "GET", f, len(self.__hosts))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 523, in __send_request_helper
    raise Exception(
Exception: SuperTokens core threw an error for a GET request to path: '/recipe/session' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)


SuperTokens core threw an error for a GET request to path: '/recipe/session' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/framework/flask/__init__.py", line 75, in wrapped_function
    response = f(*args, **kwargs)
  File "app.py", line 1279, in get_session_info
    "sessionDataFromDatabase": session_.sync_get_session_data_from_database(),
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/interfaces.py", line 604, in sync_get_session_data_from_database
    return sync(self.get_session_data_from_database(user_context))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/session_class.py", line 113, in get_session_data_from_database
    session_info = await self.recipe_implementation.get_session_information(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/recipe_implementation.py", line 373, in get_session_information
    return await session_functions.get_session_information(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/session_functions.py", line 550, in get_session_information
    response = await recipe_implementation.querier.send_get_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 323, in send_get_request
    return await self.__send_request_helper(path, "GET", f, len(self.__hosts))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 523, in __send_request_helper
    raise Exception(
Exception: SuperTokens core threw an error for a GET request to path: '/recipe/session' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)


SuperTokens core threw an error for a GET request to path: '/recipe/session' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/framework/flask/__init__.py", line 75, in wrapped_function
    response = f(*args, **kwargs)
  File "app.py", line 1279, in get_session_info
    "sessionDataFromDatabase": session_.sync_get_session_data_from_database(),
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/interfaces.py", line 604, in sync_get_session_data_from_database
    return sync(self.get_session_data_from_database(user_context))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/session_class.py", line 113, in get_session_data_from_database
    session_info = await self.recipe_implementation.get_session_information(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/recipe_implementation.py", line 373, in get_session_information
    return await session_functions.get_session_information(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/session/session_functions.py", line 550, in get_session_information
    response = await recipe_implementation.querier.send_get_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 323, in send_get_request
    return await self.__send_request_helper(path, "GET", f, len(self.__hosts))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 523, in __send_request_helper
    raise Exception(
Exception: SuperTokens core threw an error for a GET request to path: '/recipe/session' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)


Tenant not found
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/recipe.py", line 132, in handle_api_request
    return await handle_login_methods_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/api/login_methods.py", line 35, in handle_login_methods_api
    result = await api_implementation.login_methods_get(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/multitenancy/api/implementation.py", line 56, in login_methods_get
    raise Exception("Tenant not found")
Exception: Tenant not found

SuperTokens core threw an error for a POST request to path: '/customer1/recipe/user/password/reset/token/consume' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/recipe.py", line 347, in handle_api_request
    return await handle_password_reset_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/password_reset.py", line 63, in handle_password_reset_api
    response = await api_implementation.password_reset_post(
  File "app.py", line 484, in password_reset_post
    return await original_password_reset_post(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/api/implementation.py", line 414, in password_reset_post
    await api_options.recipe_implementation.consume_password_reset_token(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailpassword/recipe_implementation.py", line 224, in consume_password_reset_token
    response = await self.querier.send_post_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 366, in send_post_request
    return await self.__send_request_helper(path, "POST", f, len(self.__hosts))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 523, in __send_request_helper
    raise Exception(
Exception: SuperTokens core threw an error for a POST request to path: '/customer1/recipe/user/password/reset/token/consume' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)


SuperTokens core threw an error for a POST request to path: '/customer1/recipe/user/email/verify' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)

Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/recipe.py", line 182, in handle_api_request
    return await handle_email_verify_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/api/email_verify.py", line 55, in handle_email_verify_api
    result = await api_implementation.email_verify_post(
  File "app.py", line 399, in email_verify_post
    return await original_email_verify_post(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/recipe.py", line 515, in email_verify_post
    response = await api_options.recipe_implementation.verify_email_using_token(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/emailverification/recipe_implementation.py", line 87, in verify_email_using_token
    response = await self.querier.send_post_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 366, in send_post_request
    return await self.__send_request_helper(path, "POST", f, len(self.__hosts))
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/querier.py", line 523, in __send_request_helper
    raise Exception(
Exception: SuperTokens core threw an error for a POST request to path: '/customer1/recipe/user/email/verify' with status code: 400 and message: AppId or tenantId not found => Tenant with the following connectionURIDomain, appId and tenantId combination not found: (, public, customer1)


Object of type ThirdPartyInfo is not JSON serializable
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/recipe.py", line 137, in handle_api_request
    return await handle_sign_in_up_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/api/signinup.py", line 116, in handle_sign_in_up_api
    return send_200_response(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/utils.py", line 160, in send_200_response
    response.set_json_content(data_json)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_response.py", line 80, in set_json_content
    self.response.data = json.dumps(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ThirdPartyInfo is not JSON serializable

Object of type ThirdPartyInfo is not JSON serializable
Traceback (most recent call last):
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_middleware.py", line 56, in _
    result: Union[BaseResponse, None] = sync(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/async_to_sync_wrapper.py", line 45, in sync
    return loop.run_until_complete(co)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/supertokens.py", line 613, in middleware
    request_handled = await final_matched_recipe.handle_api_request(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/recipe.py", line 137, in handle_api_request
    return await handle_sign_in_up_api(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/recipe/thirdparty/api/signinup.py", line 116, in handle_sign_in_up_api
    return send_200_response(
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/utils.py", line 160, in send_200_response
    response.set_json_content(data_json)
  File "/Users/sattvik/projects/supertokens/supertokens-python/supertokens_python/framework/flask/flask_response.py", line 80, in set_json_content
    self.response.data = json.dumps(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/Users/sattvik/miniconda3/envs/st/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ThirdPartyInfo is not JSON serializable

Object of type ThirdPartyInfo is not JSON serializable
